{"version":3,"sources":["assets/downArrow.png","assets/leftArrow.png","assets/rightArrow.png","components/spritesheet.png","components/itg_arrow_good_400x400.png","assets/topExplosion.png","assets/bottomExplosion.png","assets/leftExplosion.png","assets/logo.png","components/BackgroundVideo/index.jsx","components/PageLayout/PlayContainer/PlayTime/index.jsx","components/PageLayout/PlayContainer/Webcam/VideoWithOverlay.jsx","components/DefferedPromise.js","const.js","components/PageLayout/PlayContainer/Webcam/index.jsx","components/spriteAnimation.js","components/ExplosionArrow.js","ArrowGameComponent/ArrowItem.js","ArrowGameComponent/index.js","components/PageLayout/PlayContainer/PlayRoad/index.jsx","components/PageLayout/PlayContainer/BackButton/index.jsx","components/PageLayout/PlayContainer/HappyBar/index.jsx","components/PageLayout/PlayContainer/index.jsx","components/PageLayout/MenuContainer/LevelNavbar/index.jsx","components/PageLayout/MenuContainer/index.jsx","components/PageLayout/index.jsx","App.js","serviceWorker.js","index.js","assets/star.png","assets/bg-video.mp4","assets/upArrow.png"],"names":["module","exports","__webpack_require__","p","BackgroundVideo","react_default","a","createElement","className","autoPlay","loop","id","src","BgVideo","type","PlayTime","interval","state","time","clearInterval","this","_this2","setInterval","setState","seconds","map","val","concat","Math","floor","slice","join","React","PureComponent","VideoWithOverlay","onChange","_assertThisInitialize","Object","assertThisInitialized","_this","video","overlay","isLoaded","_this$video$getBoundi","getBoundingClientRect","width","height","props","onLoaded","mediaElement","onVideoRef","el","onCanvasRef","onPlay","nextProps","srcObject","react","style","position","muted","assign","videoStyle","ref","top","left","DeferredPromise","classCallCheck","promise","Promise","resolve","reject","EnumArrowType","UP","DOWN","LEFT","RIGHT","LEVEL","UNSET","EASY","MEDIUM","HARD","dummyArray","toConsumableArray","Array","randomType","randVal","random","ARROWS","nextArrowStartTime","max","TIMEOUT_DETECT_MOVEMENT","PERFECT_SCORE","COOL_SCORE","MAX_FRAME_LENGTH","EPS","HAPPY_THRESHOLD","Webcam","listFrames","faceDetectionOptions","faceapi","isFirstFaceDetected","listComingDirection","directionId","loadFaceDetector","_callee","faceDetector","regenerator_default","wrap","_context","prev","next","tinyFaceDetector","console","log","loadFromUri","isFaceDetectorLoaded","stop","runFaceRecognition","_callee2","_this$state","result","_context2","abrupt","withFaceExpressions","sent","onReceivedNextFrame","somethingDummy","_callee3","_context3","navigator","mediaDevices","getUserMedia","t0","error","toString","checkLastMovingFrame","x","y","length","_listFrames","_x","_y","abs","checkDirectionWithTimeout","timeout","_ref4","thisId","setTimeout","filter","item","isValid","happyValue","push","detection","happy","expressions","box","_listFrames$","xDistance","yDistance","rightDirections","all","faceExpressionNet","loadModels","background","color","VideoWithOverlay_VideoWithOverlay","refs","SpriteAnimation","_ref","element","frames","_ref$duration","duration","columns","rows","_ref$startingPosition","startingPosition","_ref$iterations","iterations","Infinity","animateSprite","document","querySelector","dataset","animationSrc","lastTime","positionX","positionY","backgroundSize","requestAnimationFrame","animation","now","backgroundPosition","EnumDirection","TOP","BOTTOM","IMAGE_SIZE","IMAGE_STYLE","EXPLOSION_STYLE","ExplosionArrow","getRotateAngle","direction","getExplosionIcon","TopExplosionIcon","LeftExplosionIcon","RightExplosionIcon","BottomExplosionIcon","getRowOfSprite","boom","_animationOne","ArrowIcon","objectSpread","transform","data-animation-src","Component","ArrowItem","possibleConstructorReturn","getPrototypeOf","call","_onReachTop","asyncToGenerator","mark","onReachTop","scale","getImageSource","UpArrow","LeftArrow","RightArrow","DownArrow","bottom","prevProps","_this$props","isStart","distance","moveTime","alt","transition","opacity","ArrowGameComponent","leftRef","createRef","downRef","upRef","rightRef","_preProcessingData","arrows","arrowData","index","response","timeoutStartTime","start","data","forEach","arrowItem","animateArrow","isAnimatedMap","defineProperty","handleBoom","current","handleReachTop","currentTime","detectTime","elapsedTime","Date","webcam","onScoreChange","_x2","apply","arguments","forceUpdate","getElementById","upArrowData","downArrowData","leftArrowData","rightArrowData","components_ExplosionArrow","Fragment","ArrowGameComponent_ArrowItem","key","clientHeight","PlayRoad","memo","src_ArrowGameComponent","BackButton","onStop","onClick","HappyBar","percentage","PlayContainer","webcamRef","score","handleScoreChange","add","handleHappyChange","level","PlayContainer_PlayTime","PlayContainer_PlayRoad","Webcam_Webcam","PlayContainer_BackButton","PlayContainer_HappyBar","LevelNavbar","Start","MenuContainer","Logo","MenuContainer_LevelNavbar","PageLayout","handleStartPlay","handleStopPlay","components_BackgroundVideo","PageLayout_PlayContainer","PageLayout_MenuContainer","App","components_PageLayout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e464a7c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/downArrow.ee80dd4b.png\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.a0858f6e.png\";","module.exports = __webpack_public_path__ + \"static/media/rightArrow.5e5705ec.png\";","module.exports = __webpack_public_path__ + \"static/media/spritesheet.1f93086c.png\";","module.exports = __webpack_public_path__ + \"static/media/itg_arrow_good_400x400.c3128bf8.png\";","module.exports = __webpack_public_path__ + \"static/media/topExplosion.7f0ea168.png\";","module.exports = __webpack_public_path__ + \"static/media/bottomExplosion.95f0ab71.png\";","module.exports = __webpack_public_path__ + \"static/media/leftExplosion.0385c4aa.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.815eb85e.png\";","import React from 'react';\nimport BgVideo from '../../assets/bg-video.mp4';\nimport './styles.css';\n\nconst BackgroundVideo = () => (\n    <div className=\"background-video\">\n        {/*<iframe*/}\n        {/*    src=\"https://www.youtube.com/embed/rRzxEiBLQCA?autoplay=1&controls=0&showinfo=0&autohide=1&start=47&loop=1\"*/}\n        {/*    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"*/}\n        {/*    allowFullScreen*/}\n        {/*/>*/}\n\n        <video autoPlay loop id=\"bg-video\">\n            <source src={BgVideo} type=\"video/mp4\" />\n        </video>\n\n        <div className=\"background-video-bg\" />\n    </div>\n);\n\nexport default BackgroundVideo;","import React from 'react';\nimport './styles.css';\n\nconst displayFormattedTime = (seconds) => {\n    const format = val => `0${Math.floor(val)}`.slice(-2);\n    const minutes = (seconds % 3600) / 60;\n\n    return [minutes, seconds % 60].map(format).join(':');\n};\n\nclass PlayTime extends React.PureComponent {\n    interval = null;\n\n    state = {\n        time: 0,\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.setState({\n                time: this.state.time + 1,\n            })\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <div className=\"play-time\">\n                <span className=\"title\">TIME</span>\n                <span className=\"time\">{displayFormattedTime(this.state.time)}</span>\n            </div>\n        );\n    }\n}\n\nexport default PlayTime;\n\n","import * as React from \"react\";\n\nexport default class VideoWithOverlay extends React.Component {\n  componentWillReceiveProps(nextProps) {\n    const { srcObject } = nextProps;\n    if (srcObject && this.props.srcObject !== srcObject) {\n      this.video.srcObject = srcObject;\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.src !== this.props.src;\n  }\n\n  componentDidUpdate() {\n    this.onChange();\n  }\n\n  componentDidMount() {\n    this.onChange();\n  }\n\n  onChange = () => {\n    const { video, overlay, isLoaded } = this;\n    if (video && overlay && isLoaded) {\n      const { width, height } = this.video.getBoundingClientRect();\n      this.overlay.width = width;\n      this.overlay.height = height;\n      this.props.onLoaded({ mediaElement: video, overlay });\n    }\n  };\n\n  onVideoRef = el => {\n    this.video = el;\n    if (this.props.onVideoRef) {\n      this.props.onVideoRef();\n    }\n    this.onChange();\n  };\n\n  onCanvasRef = el => {\n    this.overlay = el;\n    this.onChange();\n  };\n\n  onPlay = () => {\n    this.isLoaded = true;\n    this.onChange();\n  };\n\n  render() {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <video\n          muted\n          autoPlay\n          style={Object.assign({}, this.props.videoStyle)}\n          ref={this.onVideoRef}\n          onPlay={this.onPlay}\n          src={this.props.src}\n          className=\"video-element\"\n        />\n        <canvas\n          style={{ position: \"absolute\", top: 0, left: 0 }}\n          ref={this.onCanvasRef}\n        />\n      </div>\n    );\n  }\n}\n","class DeferredPromise {\n    constructor() {\n      this.promise = new Promise((resolve, reject) => {\n        this.reject = reject;\n        this.resolve = resolve;\n      });\n    }\n  }\n  \n  export default DeferredPromise;","export const EnumArrowType = {\n  UP: \"up\",\n  DOWN: \"down\",\n  LEFT: \"left\",\n  RIGHT: \"right\"\n};\n\nexport const LEVEL = {\n  UNSET: 0,\n  EASY: 1,\n  MEDIUM: 2,\n  HARD: 3,\n};\n\nconst CONST_TIME = 2000;\n\nconst MIN_BETWEEN_ARROW = 2000;\n\nexport const MOVE_TIME = 5000;\n\nconst dummyArray = [...Array(500)];\nconst randomType = () => {\n  const randVal = Math.random();\n  if (randVal < 0.25) {\n    return EnumArrowType.UP;\n  } else if (randVal < 0.5) {\n    return EnumArrowType.DOWN;\n  } else if (randVal < 0.75) {\n    return EnumArrowType.LEFT;\n  }\n  return EnumArrowType.RIGHT;\n};\n\nexport const ARROWS = dummyArray.map(() => ({\n  type: randomType(),\n  nextArrowStartTime: Math.max(Math.random() * CONST_TIME, MIN_BETWEEN_ARROW)\n}));\n\nexport const TIMEOUT_DETECT_MOVEMENT = 1000;\n\nexport const PERFECT_SCORE = 500;\nexport const COOL_SCORE = 300;\n","import * as React from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport VideoWithOverlay from \"./VideoWithOverlay\";\nimport \"./styles.css\";\nimport DeferredPromise from \"../../../DefferedPromise\";\nimport { EnumArrowType } from \"../../../../const\";\n\nconst MAX_FRAME_LENGTH = 4;\nconst EPS = 0.01;\nconst HAPPY_THRESHOLD = 0.5;\n\nexport default class Webcam extends React.Component {\n  state = {\n    listFrames: [],\n    faceDetectionOptions: new faceapi.TinyFaceDetectorOptions(),\n    isFirstFaceDetected: false\n  };\n\n  listComingDirection = [];\n  directionId = 0;\n\n  loadFaceDetector = async () => {\n    const faceDetector = faceapi.nets.tinyFaceDetector;\n    if (!faceDetector.isLoaded) {\n      console.log(\"Reload Model: \", faceDetector);\n      faceDetector.loadFromUri(\"./models\");\n    }\n    this.setState({ isFaceDetectorLoaded: true });\n  };\n\n  async loadModels() {\n    await Promise.all([\n      faceapi.nets.faceExpressionNet.loadFromUri(\"./models\"),\n      faceapi.nets.tinyFaceDetector.loadFromUri(\"./models\")\n    ]);\n    await this.loadFaceDetector();\n  }\n\n  componentDidMount() {\n    this.loadModels();\n  }\n\n  runFaceRecognition = async () => {\n    const { mediaElement, overlay, faceDetectionOptions } = this.state;\n    if (!mediaElement || !overlay) {\n      return;\n    }\n    const result = await faceapi\n      .detectSingleFace(mediaElement, faceDetectionOptions)\n      .withFaceExpressions();\n    if (result) {\n      this.onReceivedNextFrame(result);\n    } else {\n      this.setState({\n        somethingDummy: Math.random()\n      });\n    }\n  };\n\n  componentDidUpdate() {\n    this.runFaceRecognition();\n  }\n\n  onVideoRef = async () => {\n    try {\n      const srcObject = await navigator.mediaDevices.getUserMedia({\n        video: {}\n      });\n      this.setState({ srcObject });\n    } catch (err) {\n      this.setState({ error: err.toString() });\n    }\n  };\n\n  checkLastMovingFrame = (x, y) => {\n    const { listFrames } = this.state;\n    if (listFrames.length < 1) return true;\n    const { x: _x, y: _y } = listFrames[listFrames.length - 1];\n    if (Math.abs(x - _x) < EPS) return false;\n    if (Math.abs(y - _y) < EPS) return false;\n    return true;\n  };\n\n  checkDirectionWithTimeout = (type, timeout) => {\n    const { resolve, promise } = new DeferredPromise();\n    const thisId = ++this.directionId;\n    setTimeout(() => {\n      this.listComingDirection = this.listComingDirection.filter(\n        item => item.id !== thisId\n      );\n      resolve({\n        isValid: false,\n        happyValue: null\n      });\n    }, timeout);\n    this.listComingDirection.push({\n      resolve,\n      type,\n      id: thisId\n    });\n    return promise;\n  };\n\n  onReceivedNextFrame = result => {\n    const { detection, expressions } = result;\n    const { happy } = expressions;\n    if (happy < HAPPY_THRESHOLD) {\n      // Not enough happy!\n      console.log(`Unhappy!!! Rate: ${happy * 100} %`);\n    }\n    const { box } = detection;\n    const { x, y } = box;\n    if (!this.checkLastMovingFrame(x, y)) {\n      return;\n    }\n    const { listFrames } = this.state;\n    if (listFrames.length === MAX_FRAME_LENGTH) {\n      // Test to get direction:\n      const { x: _x, y: _y } = listFrames[0];\n      const xDistance = Math.abs(x - _x),\n        yDistance = Math.abs(y - _y);\n      let type = EnumArrowType.LEFT;\n      if (xDistance > yDistance) {\n        // console.log(x < _x ? \"Right\" : \"Left\");\n        if (x < _x) {\n          type = EnumArrowType.RIGHT;\n        }\n      } else {\n        // console.log(y < _y ? \"Up\" : \"Down\");\n        if (y < _y) type = EnumArrowType.UP;\n        else type = EnumArrowType.DOWN;\n      }\n      const rightDirections = this.listComingDirection.filter(\n        item => item.type === type\n      );\n      if (rightDirections.length > 0) {\n        rightDirections[0].resolve({\n          isValid: true,\n          happyValue: happy\n        });\n        this.listComingDirection = this.listComingDirection.filter(\n          item => item.id !== rightDirections[0].id\n        );\n      }\n      this.setState({\n        listFrames: [\n          {\n            x,\n            y\n          }\n        ]\n      });\n    } else {\n      listFrames.push({\n        x,\n        y\n      });\n      this.setState({\n        listFrames\n      });\n    }\n  };\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div style={{ background: \"red\", color: \"white\" }}>\n          <h3> Error occured while requesting webcam access: </h3>\n          <p> {this.state.error} </p>\n        </div>\n      );\n    }\n\n        return (\n            <div className=\"webcam-container\">\n                <VideoWithOverlay\n                    srcObject={this.state.srcObject}\n                    onLoaded={refs => this.setState(refs)}\n                    onVideoRef={this.onVideoRef}\n                    onReceivedNextFrame={this.onReceivedNextFrame}\n                />\n            </div>\n        );\n    }\n}\n","export class SpriteAnimation {\n    constructor({\n                    element,\n                    frames,\n                    duration = 600,\n                    columns,\n                    rows,\n                    startingPosition = null,\n                    iterations = Infinity\n                }) {\n        this.element = element;\n        this.frames = frames;\n        this.duration = duration / frames;\n        this.columns = columns;\n        this.rows = rows;\n        this.startingPosition = startingPosition;\n        this.iterations = iterations;\n        this.animateSprite = function() {\n            // Get all this' properties through object destructuring\n            // This allows for their use in the nested function animation()\n            let {\n                element,\n                startingPosition,\n                columns,\n                rows,\n                duration,\n                iterations\n            } = this;\n            // Elements are passed according to querySelector syntax.\n            const el = document.querySelector(`.${element}`);\n            const src = el.dataset.animationSrc;\n            let lastTime = 0; // Variable used to compare time inside animation function\n            let positionX = 0; // Start posX for the image slicer\n            let positionY = 0; // Start posY for the image slicer\n            if (startingPosition === \"bottom-right\") {\n                positionX = 100;\n                positionY = 100;\n            }\n            el.style.background = `url(${src}) ${positionX}% ${positionY}%`;\n            el.style.backgroundSize = `${columns * 100}% ${rows * 100}%`; // Scale up size by 100% to focus on one frame\n            requestAnimationFrame(animation);\n\n            function animation(now) {\n                // The now parameter passed to animation gives us the current time\n                if (now - lastTime < duration) {\n                    // This if statement ensures that animation() in relation to the total duration. Otherwise it would fire at 60fps\n                    requestAnimationFrame(animation);\n                    return;\n                }\n                lastTime = now; // Update the last time, so we can compare now with it in next iteration\n                el.style.backgroundPosition = `${positionX}% ${positionY}%`; // We use the ES6 template literal to insert the variable \"position\" on the el\n                // If no startingPosition has been set, run the default algorithm (from top left -> bottom right)\n                if (startingPosition === null) {\n                    if (positionX < 100) {\n                        /*\n                                    Percent increment to Use = 100% / (Discrete images in your sprite – 1)\n                                    So if you have 6 images in your sprite: 100% / (6-1) = 100% / (5) = 20%\n                                    The same is used for the positionY (rows in sprite)\n                                    */\n                        positionX = positionX + 100 / (columns - 1);\n                    } else {\n                        // Reset positionX to 0\n                        positionX = 0;\n                        if (positionY >= 100) {\n                            // If positionY is 100, reset it as well\n                            positionY = 0;\n                            if (iterations && iterations > 0) {\n                                /*\n                                                The default animation will loop, but if an iteration parameter\n                                                has been passed, we will run the animation the desired number\n                                                of times specified by the parameter\n                                                */\n                                iterations--;\n                            }\n                        } else {\n                            // Else increment positionY by 100%/(4-1)\n                            positionY = positionY + 100 / (rows - 1);\n                        }\n                    }\n                    if (iterations > 0) {\n                        requestAnimationFrame(animation);\n                    }\n                } else if (startingPosition === \"bottom-right\") {\n                    // Same algorithm but opposite logic, going from 100 -> 0 on both axes instead of decreasing\n                    if (positionX > 0) {\n                        positionX = positionX - 100 / (columns - 1);\n                    } else {\n                        positionX = 100;\n                        if (positionY > 0) {\n                            positionY = positionY - 100 / (rows - 1);\n                        } else {\n                            positionY = 100;\n                            if (iterations && iterations > 0) {\n                                iterations--;\n                            }\n                        }\n                    }\n                    if (iterations > 0) {\n                        requestAnimationFrame(animation);\n                    }\n                }\n            }\n        };\n    }\n}\n","import React, { Component } from \"react\";\nimport { SpriteAnimation } from \"./spriteAnimation\";\nimport RightExplosionIcon from \"./spritesheet.png\"; // Tell Webpack this JS file uses this image\nimport ArrowIcon from \"./itg_arrow_good_400x400.png\"; // Tell Webpack this JS file uses this image\nimport TopExplosionIcon from \"../assets/topExplosion.png\";\nimport BottomExplosionIcon from \"../assets/bottomExplosion.png\";\nimport LeftExplosionIcon from \"../assets/leftExplosion.png\";\n\nexport const EnumDirection = {\n  TOP: \"top\",\n  LEFT: \"left\",\n  RIGHT: \"right\",\n  BOTTOM: \"bottom\"\n};\n\nexport const IMAGE_SIZE = 80;\n\nconst IMAGE_STYLE = { width: IMAGE_SIZE, height: IMAGE_SIZE };\nconst EXPLOSION_STYLE = {\n  width: IMAGE_SIZE + 80,\n  height: IMAGE_SIZE + 80,\n  position: \"relative\",\n  top: -(IMAGE_SIZE + 20)\n};\nclass ExplosionArrow extends Component {\n  componentDidMount() {\n    this._animationOne = new SpriteAnimation({\n      element: `image-${this.props.direction}`,\n      frames: 60,\n      columns: 10,\n      rows: this.getRowOfSprite(),\n      iterations: 1\n    });\n  }\n\n  getRotateAngle = () => {\n    switch (this.props.direction) {\n      case EnumDirection.TOP:\n        return 180;\n      case EnumDirection.LEFT:\n        return 90;\n      case EnumDirection.RIGHT:\n        return -90;\n      default:\n        return 0;\n    }\n  };\n\n  getExplosionIcon = () => {\n    switch (this.props.direction) {\n      case EnumDirection.TOP:\n        return TopExplosionIcon;\n      case EnumDirection.LEFT:\n        return LeftExplosionIcon;\n      case EnumDirection.RIGHT:\n        return RightExplosionIcon;\n      default:\n        return BottomExplosionIcon;\n    }\n  };\n\n  getRowOfSprite = () => {\n    switch (this.props.direction) {\n      case EnumDirection.TOP:\n        return 7;\n      case EnumDirection.LEFT:\n        return 9;\n      case EnumDirection.RIGHT:\n        return 9;\n      default:\n        return 8;\n    }\n  };\n\n  boom = () => {\n    this._animationOne.animateSprite();\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <img\n            src={ArrowIcon}\n            style={{\n              ...IMAGE_STYLE,\n              transform: `rotate(${this.getRotateAngle()}deg)`\n            }}\n          />\n        </div>\n        <div\n          style={EXPLOSION_STYLE}\n          className={`image-${this.props.direction}`}\n          data-animation-src={this.getExplosionIcon()}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default ExplosionArrow;\n","import React from \"react\";\n\nimport { EnumArrowType, TIMEOUT_DETECT_MOVEMENT } from \"../const\";\n\nimport UpArrow from \"../assets/upArrow.png\";\nimport DownArrow from \"../assets/downArrow.png\";\nimport LeftArrow from \"../assets/leftArrow.png\";\nimport RightArrow from \"../assets/rightArrow.png\";\n\nimport { IMAGE_SIZE } from \"../components/ExplosionArrow\";\n\nclass ArrowItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bottom: -IMAGE_SIZE,\n      scale: 1\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isStart, distance, moveTime } = this.props;\n    if (isStart && !prevProps.isStart) {\n      this.setState(\n        {\n          bottom: distance\n        },\n        () =>\n          setTimeout(this._onReachTop, moveTime - TIMEOUT_DETECT_MOVEMENT / 2)\n      );\n    }\n  }\n''\n  _onReachTop = async () => {\n    const isDisappear = await this.props.onReachTop();\n    if (isDisappear) {\n      this.setState({\n        scale: 0\n      });\n    }\n  };\n\n  getImageSource = () => {\n    switch (this.props.type) {\n      case EnumArrowType.UP:\n        return UpArrow;\n      case EnumArrowType.LEFT:\n        return LeftArrow;\n      case EnumArrowType.RIGHT:\n        return RightArrow;\n      default:\n        return DownArrow;\n    }\n  };\n\n  render() {\n    const { moveTime } = this.props;\n    const { bottom, scale } = this.state;\n    return (\n      <img\n        src={this.getImageSource()}\n        alt=\"up-icon\"\n        className={`arrow-item`}\n        style={{\n          transition: `bottom ${moveTime /\n            1000}s linear, opacity 0.2s, transform 0.2s`,\n          bottom,\n          transform: `scale(${scale})`,\n          opacity: scale,\n          width: IMAGE_SIZE,\n          height: IMAGE_SIZE\n        }}\n      />\n    );\n  }\n}\n\nexport default ArrowItem;\n","import React from \"react\";\n\nimport ArrowItem from \"./ArrowItem\";\nimport {\n  COOL_SCORE,\n  EnumArrowType,\n  PERFECT_SCORE,\n  TIMEOUT_DETECT_MOVEMENT\n} from \"../const\";\nimport ExplosionArrow, { EnumDirection } from \"../components/ExplosionArrow\";\n\nimport \"./styles.scss\";\n\n// props:\n// moveTime: number -> how many second to reach top\n// arrows: Array<{ type: string, nextArrowStartTime: number }>\n// state:\n// data: Array<>\nclass ArrowGameComponent extends React.Component {\n  leftRef = React.createRef();\n  downRef = React.createRef();\n  upRef = React.createRef();\n  rightRef = React.createRef();\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this._preProcessingData(this.props.arrows),\n      isAnimatedMap: {} // map arrow id -> boolean\n    };\n    setTimeout(() => this.forceUpdate(), 100);\n    setTimeout(this.start, 500);\n  }\n\n  _preProcessingData = () => {\n    const { arrows } = this.props;\n    let timeout = 0;\n    return arrows.map((arrowData, index) => {\n      const response = {\n        id: index,\n        type: arrowData.type,\n        timeoutStartTime: timeout\n      };\n      timeout += arrowData.nextArrowStartTime;\n      return response;\n    });\n  };\n\n  start = () => {\n    const { data } = this.state;\n    data.forEach(arrowItem => {\n      setTimeout(\n        () => this.animateArrow(arrowItem),\n        arrowItem.timeoutStartTime\n      );\n    });\n  };\n\n  animateArrow = arrowItem => {\n    this.setState({\n      isAnimatedMap: {\n        ...this.state.isAnimatedMap,\n        [arrowItem.id]: true\n      }\n    });\n  };\n\n  handleBoom = type => {\n    switch (type) {\n      case EnumArrowType.UP: {\n        if (this.upRef.current) {\n            this.upRef.current.boom();\n          }\n\n          break;\n        }\n        case EnumArrowType.DOWN: {\n          if (this.downRef.current) {\n            this.downRef.current.boom();\n          }\n\n          break;\n        }\n        case EnumArrowType.LEFT: {\n          if (this.leftRef.current) {\n            this.leftRef.current.boom();\n          }\n\n          break;\n        }\n        case EnumArrowType.RIGHT: {\n          if (this.rightRef.current) {\n            this.rightRef.current.boom();\n          }\n\n          break;\n        }}\n  };\n\n  handleReachTop = async (id, type) => {\n    const currentTime = Date.now();\n\n    if (!this.props.webcam.current) { return; }\n\n    const data = await this.props.webcam.current.checkDirectionWithTimeout(\n      type,\n      TIMEOUT_DETECT_MOVEMENT\n    );\n    const {\n      isValid,\n      happyValue\n    } = data;\n    if (isValid) {\n      const detectTime = Date.now();\n      const elapsedTime = detectTime - currentTime;\n      if (\n        elapsedTime <= TIMEOUT_DETECT_MOVEMENT / 3 ||\n        elapsedTime > (TIMEOUT_DETECT_MOVEMENT * 2) / 3\n      ) {\n        this.props.onScoreChange(COOL_SCORE);\n      } else {\n        this.props.onScoreChange(PERFECT_SCORE);\n      }\n      this.handleBoom(type);\n    }\n    return isValid;\n  };\n\n  render() {\n    const { data, isAnimatedMap } = this.state;\n    const { moveTime } = this.props;\n    const element = document.getElementById(\"arrow-game\");\n    const upArrowData = data.filter(\n      arrowItem => arrowItem.type === EnumArrowType.UP\n    );\n    const downArrowData = data.filter(\n      arrowItem => arrowItem.type === EnumArrowType.DOWN\n    );\n    const leftArrowData = data.filter(\n      arrowItem => arrowItem.type === EnumArrowType.LEFT\n    );\n    const rightArrowData = data.filter(\n      arrowItem => arrowItem.type === EnumArrowType.RIGHT\n    );\n    return (\n      <div className=\"arrow-game-wrapper\" id=\"arrow-game\">\n        <div className=\"arrow-holder-wrapper\">\n          <ExplosionArrow ref={this.leftRef} direction={EnumDirection.LEFT} />\n          <ExplosionArrow ref={this.downRef} direction={EnumDirection.BOTTOM} />\n          <ExplosionArrow ref={this.upRef} direction={EnumDirection.TOP} />\n          <ExplosionArrow ref={this.rightRef} direction={EnumDirection.RIGHT} />\n        </div>\n        <div className=\"arrow-space\">\n          <div className=\"arrow-move-container\">\n            {element && (\n              <React.Fragment>\n                <div className=\"arrow-move-wrapper\">\n                  {leftArrowData.map(arrowItem => (\n                    <ArrowItem\n                      key={arrowItem.id}\n                      type={arrowItem.type}\n                      isStart={!!isAnimatedMap[arrowItem.id]}\n                      moveTime={moveTime}\n                      onReachTop={() =>\n                        this.handleReachTop(arrowItem.id, arrowItem.type)\n                      }\n                      distance={element.clientHeight}\n                    />\n                  ))}\n                </div>\n                <div className=\"arrow-move-wrapper\">\n                  {downArrowData.map(arrowItem => (\n                    <ArrowItem\n                      key={arrowItem.id}\n                      type={arrowItem.type}\n                      isStart={!!isAnimatedMap[arrowItem.id]}\n                      moveTime={moveTime}\n                      onReachTop={() =>\n                        this.handleReachTop(arrowItem.id, arrowItem.type)\n                      }\n                      distance={element.clientHeight}\n                    />\n                  ))}\n                </div>\n                <div className=\"arrow-move-wrapper\">\n                  {upArrowData.map(arrowItem => (\n                    <ArrowItem\n                      key={arrowItem.id}\n                      type={arrowItem.type}\n                      isStart={!!isAnimatedMap[arrowItem.id]}\n                      moveTime={moveTime}\n                      onReachTop={() =>\n                        this.handleReachTop(arrowItem.id, arrowItem.type)\n                      }\n                      distance={element.clientHeight}\n                    />\n                  ))}\n                </div>\n                <div className=\"arrow-move-wrapper\">\n                  {rightArrowData.map(arrowItem => (\n                    <ArrowItem\n                      key={arrowItem.id}\n                      type={arrowItem.type}\n                      isStart={!!isAnimatedMap[arrowItem.id]}\n                      moveTime={moveTime}\n                      onReachTop={() =>\n                        this.handleReachTop(arrowItem.id, arrowItem.type)\n                      }\n                      distance={element.clientHeight}\n                    />\n                  ))}\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ArrowGameComponent;\n","import React from \"react\";\n\nimport ArrowGameComponent from \"../../../../ArrowGameComponent\";\nimport { ARROWS, MOVE_TIME } from \"../../../../const\";\n\nimport \"./styles.css\";\n\nconst PlayRoad = React.memo(({ onScoreChange, webcam }) => (\n  <div className=\"play-road\">\n    <ArrowGameComponent\n      moveTime={MOVE_TIME}\n      arrows={ARROWS}\n      onScoreChange={onScoreChange}\n      webcam={webcam}\n    />\n  </div>\n));\n\nexport default PlayRoad;\n","import React from 'react';\nimport './styles.scss';\n\nconst BackButton =  React.memo(({ onStop }) => (\n    <div className=\"back-button\" onClick={onStop}>\n        BACK\n    </div>\n));\n\nexport default BackButton;","import React from 'react';\nimport './styles.css';\n\nconst HappyBar =  React.memo(({ percentage }) => (\n    <div className=\"happy-bar-container\">\n        <div className=\"happy-bar-title\">HAPPINESS</div>\n        <div className=\"happy-bar\">\n            <div className=\"filler\" style={{ width: `${percentage}%` }} />\n        </div>\n    </div>\n));\n\nexport default HappyBar;","import React from \"react\";\nimport PlayTime from \"./PlayTime\";\nimport Webcam from \"./Webcam\";\nimport PlayRoad from \"./PlayRoad\";\nimport BackButton from \"./BackButton\";\nimport HappyBar from \"./HappyBar\";\n\nclass PlayContainer extends React.Component {\n  webcamRef = React.createRef();\n\n  state = {\n    score: 0,\n    happy: 20,\n  };\n\n  handleScoreChange = add =>\n        this.setState({ score: this.state.score + add });\n\n  handleHappyChange = happy =>\n        this.setState({ happy });\n\n  render() {\n    const { level, onStop } = this.props;\n    const { happy, score } = this.state;\n\n    return (\n      <div className=\"play-container\" onClick={() => this.handleHappyChange(Math.floor((Math.random() * 100) + 1))}>\n        <PlayTime />\n        <PlayRoad level={level} onScoreChange={this.handleScoreChange} webcam={this.webcamRef} />\n        <Webcam ref={this.webcamRef} />\n        <BackButton onStop={onStop} />\n        <HappyBar percentage={happy} />\n      </div>\n    );\n  }\n}\n\nexport default PlayContainer;\n","import React from 'react';\nimport './styles.css';\nimport Start from '../../../../assets/star.png';\n\nconst LevelNavbar = ({ onPlay }) => (\n    <div className=\"level-navbar\">\n        <div className=\"level\" onClick={() => onPlay(1)}>\n            <img src={Start} alt='' />\n        </div>\n\n        <div className=\"level\" onClick={() => onPlay(1)}>\n            <img src={Start} alt='' />\n            <img src={Start} alt='' />\n        </div>\n\n        <div className=\"level\" onClick={() => onPlay(2)}>\n            <img src={Start} alt='' />\n            <img src={Start} alt='' />\n            <img src={Start} alt='' />\n        </div>\n    </div>\n);\n\nexport default LevelNavbar;","import React from 'react';\nimport LevelNavbar from \"./LevelNavbar\";\nimport Logo from '../../../assets/logo.png';\nimport './styles.css';\n\nconst MenuContainer = ({ onPlay }) => (\n    <div className=\"menu-container\">\n        <img src={Logo} alt='' />\n\n        <br />\n        <br />\n\n        <div className=\"title\">\n            LEVELS\n        </div>\n\n        <LevelNavbar onPlay={onPlay} />\n    </div>\n);\n\nexport default MenuContainer;","import React from \"react\";\nimport \"./styles.scss\";\nimport BackgroundVideo from \"../BackgroundVideo\";\nimport PlayContainer from \"./PlayContainer\";\nimport MenuContainer from \"./MenuContainer\";\nimport {LEVEL} from \"../../const\";\n\nclass PageLayout extends React.Component {\n  state = {\n    level: LEVEL.UNSET,\n  };\n\n  handleStartPlay = (level) =>\n    this.setState({ level });\n\n  handleStopPlay = () =>\n    this.setState({ level: 0 });\n\n  render() {\n    const { level } = this.state;\n\n    return (\n      <div className=\"page-layout\">\n        <BackgroundVideo />\n\n        {level !== LEVEL.UNSET && (\n            <PlayContainer level={level} onStop={this.handleStopPlay} />\n        )}\n\n        {level === LEVEL.UNSET && (\n            <MenuContainer onPlay={this.handleStartPlay} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PageLayout;\n","import React from \"react\";\nimport PageLayout from \"./components/PageLayout\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageLayout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/star.18db0e01.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-video.23b0e082.mp4\";","module.exports = __webpack_public_path__ + \"static/media/upArrow.c8ac8c20.png\";"],"sourceRoot":""}